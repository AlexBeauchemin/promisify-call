{
  "name": "promisify-call",
  "version": "1.0.0",
  "description": "Promisify a function call so users can call a function with a callback or get a promise",
  "main": "index.js",
  "scripts": {
    "test": "npm run dist && ava -v",
    "dist": "node ./node_modules/babel-cli/bin/babel.js promisify.js --out-file index.js",
    "docs": "jsdoc2md \"promisify.js\" --heading-depth 3 --template readme.hbs > README.md",
    "prepublish": "npm run dist"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bojand/promisify-call.git"
  },
  "keywords": [
    "promise",
    "callback",
    "promisify"
  ],
  "author": {
    "name": "Bojan Djurkovic <dbojan@gmail.com>"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bojand/promisify-call/issues"
  },
  "homepage": "https://github.com/bojand/promisify-call#readme",
  "dependencies": {
    "bluebird": "^3.4.1"
  },
  "devDependencies": {
    "ava": "^0.16.0",
    "babel-cli": "^6.11.4",
    "babel-preset-es2015": "^6.13.2",
    "xo": "^0.16.0"
  },
  "ava": {
    "files": [
      "test/*.test.js"
    ]
  },
  "directories": {
    "test": "test"
  },
  "xo": {
    "envs": [
      "node",
      "es6",
      "mocha"
    ],
    "esnext": true,
    "space": true,
    "rules": {
      "babel/arrow-parens": 0,
      "babel/object-curly-spacing": 0,
      "babel/object-shorthand": 1,
      "brace-style": [
        0,
        "1tbs",
        {
          "allowSingleLine": false
        }
      ],
      "no-else-return": 1,
      "no-unused-vars": 1,
      "no-prototype-builtins": 0,
      "import/namespace": 0
    },
    "ignores": [
      "test/**"
    ]
  }
}
